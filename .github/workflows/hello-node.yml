name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  # Job 1: Build and Test
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Run test script
      run: npm test

  # Job 2: Snyk Vulnerability Scan
  snyk-scan:
    name: Snyk Security Scan
    needs: build # Ensures this runs after the build/test job completes successfully
    runs-on: ubuntu-latest
    permissions:
      contents: read # Required to checkout the code
      security-events: write # Required to upload SARIF results

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    # You might need to install node dependencies for Snyk to scan your package-lock.json correctly
    - name: Install dependencies for scanning
      run: npm ci

    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --sarif-file-output=snyk-results.sarif
    
    - name: Upload Snyk scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'snyk-results.sarif'
        
  # Job 3: Docker Login (typically preparation for a subsequent "push-to-docker" job)
  docker-login:
    name: Docker Hub Login
    needs: [build, snyk-scan] # Ensures this runs after build and scan
    runs-on: ubuntu-latest
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
